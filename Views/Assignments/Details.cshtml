@model CourseManagement.Models.Assignment

@{
    ViewData["Title"] = Model.Title;
    var cls = ViewBag.Class as CourseManagement.Models.ClassRoom;
}

<h1>@Model.Title</h1>
<p class="text-muted">L·ªõp: @cls?.Title</p>

<ul class="nav nav-tabs" id="assignmentTabs" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link active" id="edit-tab" data-bs-toggle="tab" data-bs-target="#edit" type="button"
            role="tab">Ch·ªânh s·ª≠a</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="subs-tab" data-bs-toggle="tab" data-bs-target="#subs" type="button" role="tab">N·ªôp
            b√†i</button>
    </li>
</ul>
<div class="tab-content p-3 border border-top-0">
    <div class="tab-pane fade show active" id="edit" role="tabpanel">
        @{
            // Determine whether current user can edit: instructor or admin
            var canEdit = User.IsInRole("Admin") || (ViewBag.Class != null && ViewBag.Class.InstructorId ==
            User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value);
        }
        @if (!canEdit)
        {
            <div class="alert alert-info">B·∫°n kh√¥ng c√≥ quy·ªÅn ch·ªânh s·ª≠a b√†i t·∫≠p n√†y.</div>
        }
        else
        {
            <form asp-action="EditDescription" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" name="id" value="@Model.Id" />
                <div class="mb-3">
                    <label class="form-label">Ti√™u ƒë·ªÅ</label>
                    <input name="title" class="form-control" value="@Model.Title" />
                </div>
                <div class="mb-3">
                    <label class="form-label">N·ªôi dung / ƒê·ªÅ b√†i</label>
                    <textarea name="description" class="form-control" rows="8">@Model.Description</textarea>
                </div>
                <button class="btn btn-primary" type="submit">L∆∞u</button>
            </form>
            <hr />
            <h4>üìÇ T·∫£i l√™n file c√¢u h·ªèi (CSV ho·∫∑c Excel)</h4>

            <form asp-action="UploadQuestions" asp-controller="Assignments" method="post" enctype="multipart/form-data">
                @Html.AntiForgeryToken()
                <input type="hidden" name="assignmentId" value="@Model.Id" />

                <div class="mb-3">
                    <label for="file" class="form-label">Ch·ªçn file:</label>
                    <input type="file" name="file" class="form-control" required />
                </div>

                <button type="submit" class="btn btn-success">T·∫£i l√™n</button>
            </form>

            @if (TempData["Error"] != null)
            {
                <div class="alert alert-danger mt-3">@TempData["Error"]</div>
            }
            @if (TempData["Success"] != null)
            {
                <div class="alert alert-success mt-3">@TempData["Success"]</div>
            }
        }
        @{
            var db = Context.RequestServices.GetService(typeof(CourseManagement.Data.ApplicationDbContext))
            as CourseManagement.Data.ApplicationDbContext;

            var questions = new List<CourseManagement.Models.Question>();

            if (db != null)
            {
                var tmp = db.Questions
                .Where(q => q.AssignmentId == Model.Id)
                .ToList();

                if (tmp != null)
                    questions = tmp;
            }
        }

    </div>
    <div class="tab-pane fade" id="subs" role="tabpanel">
        <h4>Danh s√°ch sinh vi√™n v√† tr·∫°ng th√°i n·ªôp</h4>
        <table class="table">
            <thead>
                <tr>
                    <th>H·ªç t√™n</th>
                    <th>Tr·∫°ng th√°i</th>
                    <th>T·ªáp n·ªôp</th>
                </tr>
            </thead>
            <tbody>
                @{
                    var enrollments = Context.RequestServices.GetService(typeof(CourseManagement.Data.ApplicationDbContext))
                    as CourseManagement.Data.ApplicationDbContext;
                    var userMgr =
                    Context.RequestServices.GetService(typeof(Microsoft.AspNetCore.Identity.UserManager<CourseManagement.Data.ApplicationUser>))
                    as Microsoft.AspNetCore.Identity.UserManager<CourseManagement.Data.ApplicationUser>;
                    var list = enrollments?.Enrollments.Where(e => e.ClassRoomId == Model.ClassRoomId).ToList() ?? new
                    List<CourseManagement.Models.Enrollment>();
                    foreach (var e in list)
                    {
                        var user = userMgr?.FindByIdAsync(e.StudentId).GetAwaiter().GetResult();
                        var sub = enrollments?.Submissions.FirstOrDefault(s => s.AssignmentId == Model.Id && s.StudentId ==
                        e.StudentId);
                        var submitted = sub != null;
                        <tr class="@(submitted ? "table-success" : "table-danger")">
                            <td>@(user?.FullName ?? user?.UserName)</td>
                            <td>@(submitted ? "ƒê√£ n·ªôp" : "Ch∆∞a n·ªôp")</td>
                            <td>@(submitted && sub?.FilePath != null ? Html.Raw($"<a href='/{sub.FilePath}'>T·∫£i</a>") : "-")
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>